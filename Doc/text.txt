klant
planning 
stap 1 functioneel ontwerp (de eisen wat er in moet)
stap 2 technisch ontwerp (hoe gaan we het doen etc...)
stap 3 planning werk met tijd en verdeling (1 week max)
stap 4 programeren en testen per task die afgerond is



functionele specs:
1 ophalen van characters info 
2 filteren op naam
3 autenticatie flow
4 class van charachter achievements bank value en level naam van character
5 ui design hoe het eruit te zien (overleggen met yordi) functioneel 
6 max request/timeout error handeling
7 documentatie voor toekomst dev
8 moduilare generic opzet (SOLID Principles)

technice specs:
1 http request client die alleen maar get request
2 url builder route
3 OAUTH autenticatie 
4 ophalen token auterization authenticatie ophalen opslaan zulken dingen 
5 welke end points welke parameter heb je nodig? moet je die opslaan hoe normalizeren we dat?
6 error handeling





Notitie Yordi
## Probleem
Geautomatiseerd account informatie uit te lezen. (HTTPGET)


## Functionele eisen
- Ophalen van karakter gegevens en bijbehorende gegevens
+ Level
+ Class
+ Achievements
+ Bank value  
+ Name
+ Id

- Instaat kunnen zijn om daarna in front end kunnen filteren op 'Naam'.
- Authenticatie flow toepassen
- User feedback "Bij error een bericht tonen aan user" bijv Verzoek mag maximaal .. duren met ophalen en anders error message tonen aan user.
- Documentatie bijhouden 
- Modulaire & Generic opzet (Seperation of concern)
- Error handling



## Technische eisen

- Authentication
+ Ophalen token
+ Authenticatie en Authorisatie

- Endpoint X 
+ Gegevens ophalen van alle karakters of 1 specifieke karakter

- Welke endpoints moeten we aanroepen met welke gegevens.
- Timeout handling als battle.net api offline is of het duurt te lang met verzoek.
- Http client met alleen GET requests.
- Route 
- Url builder in staat om bepaalde endpoints te benaderen
- OAUTH

| **Nummer** |   **Omschrijving specificatie**  |                             **Opmerkingen**                            | ** MoSCoW** |
|:----------:|:--------------------------------:|:----------------------------------------------------------------------:|:-----------:|
|      1     | Ophalen van karakter gegevens    |                                                                        | Must have   |
|      2     | Toepassen van authenticatie flow |                                                                        | Must have   |
|      3     | Toepassen van user feedback      | Bericht tonen aan gebruiker als het ophalen van gegevens te lang duurt | Must have   |
|      4     | Error handling                   | Als er geen user is gevonden op basis van gegeven informatie.          | Must have   |
|      5     | Modulaire en generieke opzet     | SOC (Seperation of concern)                                            | Should have |
|      6     | Filteren van karakter gegevens   | Het tonen van data op als voorbeeld 'Naam' filter.                     | Should Have |


